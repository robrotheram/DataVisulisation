/** @brief Class is a work around for bob concise coding conventions and used for a 167 lice case statement

    This Class conatins all the Testing ID
    @author Robert Fletcher
    @file TestID.java
    @date April 2013
    */
package TestUI;

import java.util.EnumSet;



public enum TestID {
   
TEST0(0),TEST1(1),TEST2(2),TEST3(3),TEST4(4),TEST5(5),TEST6(6),TEST7(7),TEST8(8),
TEST9(9),TEST10(10),TEST11(11),TEST12(12),TEST13(13),TEST14(14),TEST15(15),TEST16(16),
TEST17(17),TEST18(18),TEST19(19),TEST20(20),TEST21(21),TEST22(22),TEST23(23),TEST24(24),
TEST25(25),TEST26(26),TEST27(27),TEST28(28),TEST29(29),TEST30(30),TEST31(31),TEST32(32),
TEST33(33),TEST34(34),TEST35(35),TEST36(36),TEST37(37),TEST38(38),TEST39(39),TEST40(40),
TEST41(41),TEST42(42),TEST43(43),TEST44(44),TEST45(45),TEST46(46),TEST47(47),TEST48(48),
TEST49(49),TEST50(50),TEST51(51),TEST52(52),TEST53(53),TEST54(54),TEST55(55),TEST56(56),
TEST57(57),TEST58(58),TEST59(59),TEST60(60),TEST61(61),TEST62(62),TEST63(63),TEST64(64),
TEST65(65),TEST66(66),TEST67(67),TEST68(68),TEST69(69),TEST70(70),TEST71(71),TEST72(72),
TEST73(73),TEST74(74),TEST75(75),TEST76(76),TEST77(77),TEST78(78),TEST79(79),TEST80(80),
TEST81(81),TEST82(82),TEST83(83),TEST84(84),TEST85(85),TEST86(86),TEST87(87),TEST88(88),
TEST89(89),TEST90(90),TEST91(91),TEST92(92),TEST93(93),TEST94(94),TEST95(95),TEST96(96),
TEST97(97),TEST98(98),TEST99(99),TEST100(100),TEST101(101),TEST102(102),TEST103(103),
TEST104(104),TEST105(105),TEST106(106),TEST107(107),TEST108(108),TEST109(109),TEST110(110),
TEST111(111),TEST112(112),TEST113(113),TEST114(114),TEST115(115),TEST116(116),TEST117(117),
TEST118(118),TEST119(119),TEST120(120),TEST121(121),TEST122(122),TEST123(123),TEST124(124),
TEST125(125),TEST126(126),TEST127(127),TEST128(128),TEST129(129),TEST130(130),TEST131(131),
TEST132(132),TEST133(133),TEST134(134),TEST135(135),TEST136(136),TEST137(137),TEST138(138),
TEST139(139),TEST140(140),TEST141(141),TEST142(142),TEST143(143),TEST144(144),TEST145(145),
TEST146(146),TEST147(147),TEST148(148),TEST149(149),TEST150(150),TEST151(151),TEST152(152),
TEST153(153),TEST154(154),TEST155(155),TEST156(156),TEST157(157),TEST158(158),TEST159(159),
TEST160(160),TEST161(161),TEST162(162),TEST163(163),TEST164(164),TEST165(165),TEST166(166),
TEST167(167),TEST168(168),TEST169(169),TEST170(170),TEST171(171),TEST172(172),TEST173(173),
TEST174(174),TEST175(175),TEST176(176),TEST177(177),TEST178(178),TEST179(179),TEST180(180),
TEST181(181),TEST182(182),TEST183(183),TEST184(184),TEST185(185),TEST186(186),TEST187(187),
TEST188(188),TEST189(189),TEST190(190),TEST191(191),TEST192(192),TEST193(193),TEST194(194),
TEST195(195),TEST196(196),TEST197(197),TEST198(198),TEST199(199);


    private int id;
    private TestID(int i){
        id= i;
    }
    public int getValue(){
        return id;
    }
    public static TestID getEnum(int value){
        TestID get = null;
        for (TestID id : EnumSet.allOf(TestID.class)) {
            if(value == id.getValue()){
                get = id;
                break;
            }
 
        }
        return get;
    }
}
